name: address-api CI

on:
  pull_request:
  push:
    branches:
      - development
      - master

jobs:
  test_api:
    runs-on: ubuntu-latest
    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: supersecret
          MYSQL_DATABASE: address-api
          MYSQL_USER: curion-address-api
          MYSQL_PASSWORD: test123
        ports:
          - 3307:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    env:
      CI: true
      APP_ENV: production
      DB_CONNECTION: mysql
      DB_HOST: 0.0.0.0
      DB_PORT: 3307
      DB_DATABASE: address-api
      DB_USERNAME: curion-address-api
      DB_PASSWORD: test123
      JWT_SECRET: SuperJWTSecret
    steps:
      - uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '7.2'
          extensions: mbstring, dom, fileinfo, mysql
          tools: cs2pr
          coverage: xdebug
      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"
      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Verify MySQL connection from container
        run: |
          sudo apt-get install -y mysql-client
          mysql --host 0.0.0.0 --port 3307 -uroot -psupersecret -e "SHOW DATABASES"
          mysql --host 0.0.0.0 --port 3307 -ucurion-address-api -ptest123 -e "SHOW DATABASES"
      - name: Get Composer Cache Directory
        id: composer-cache
        run: |
          cd address-api
          echo "::set-output name=dir::$(composer config cache-files-dir)"
          cd ..

      - name: Cache Composer Downloads
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: address-api/vendor
          key: ${{ runner.OS }}-build-${{ hashFiles('**/composer.lock') }}

      - name: Setup Address API
        run: |
          cd address-api
          cp .env.example .env
          composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
          php artisan key:generate
          php artisan optimize
          cd ..

      - name: Detect Mess
        run: |
          cd address-api
          vendor/bin/phpmd app,config,database,routes,tests ansi phpmd.xml
          cd ..

      - name: Static analyze
        run: |
          cd address-api
          vendor/bin/phpstan analyse app config routes tests --error-format=checkstyle | cs2pr
          cd ..

      - name: Migrate database
        run: |
          cd address-api
          php artisan migrate --force
          php artisan db:seed --force
          cd ..

      - name: Test App API
        run: |
          cd address-api
          php artisan cache:clear
          vendor/bin/phpunit --coverage-text
          cd ..
